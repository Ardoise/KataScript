#!/bin/sh
# http://post-it.alinto.com/211/installation-et-configuration-de-logstash/

cat <<EOF >logstash-login.conf
input {
# on définit l'entrée de type fichier.
    file {
        type =&gt; "login" #on attribue le type login aux lignes lues dans ce fichier.
        path =&gt; [ "/var/tmp/test"]
    }
}

filter {
# On commence par sélectionner les lignes contenant "Login :"
    grep {
        match =&gt; ["@message","^Login : .*"] #ici on ne prend que les lignes commençant par Login :
        type =&gt; "login" #le filtre s'applique aux lignes du type login.
    }
# On sélectione les infos que l'on veut sur la ligne
    grok {
        pattern =&gt;"Login : %{WORD:login}" #ici on sélectionne le mot qui suit les deux points et le stocke dans le tableau associatif fields avec pour clé "login".
        type =&gt; "login" #le filtre s'applique aux lignes du type login.
    }
# On reforme le message avec les infos sélectionnées
    mutate {
        type =&gt; "login"
        replace =&gt; ["@message","%{login}"] #On remplace le contenu du champ message en ne mettant que la valeur du login.
    }
}

output {
# On garde la sortie standard pour le debug, on l'enlèvera lorsque le résultat nous conviendra
    stdout {
        debug =&gt; true
    }
    file {
        type =&gt; "login"
        path =&gt; "/var/tmp/sortie"
        flush_interval =&gt; 0 #on écrira dans le fichier après chaque message
        message_format =&gt; "%{@message}" #on veut simplement écrire le contenu du champ "message"
    }
}
EOF

java -jar logstash.jar agent -f logstash-login.conf
echo test &gt; /var/tmp/test
echo "Login : test" &gt; /var/tmp/test
